pipeline {
    
    agent any 
    environment {
        dockerImage =''
        registry = 'mduldar/c270-assignment'
        registryCredentials = 'mduldar'
    }
    stages {
        
        stage('Checkout'){
            steps{
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Duldar/C270-Assignment']]])
            }
        }
        stage('Build Docker image') {
            steps{
                script {
                    dockerImage = docker build registry
                }
            }
        }
        
        stage ('Uploading Image'){
            steps {
                script {
                         docker.withRegistry('', registryCredential){
                           dockerImage.push()
                    }
                }
            }
        }
        
       // Stopping Docker containers for cleaner Docker run
       stage('docker stop container') {
         steps {
            sh 'docker ps -f name=c270-assignmentContainer -q | xargs --no-run-if-empty docker container stop'
            sh 'docker container ls -a -fname=c270assignmentContainer -q | xargs -r docker container rm'
         }
       }
    }
    
    // Running Docker container, make sure port 8096 is opened in 
    stage('Docker Run') {
     steps{
         script {
            dockerImage.run("-p 8096:5000 --rm --name c270-assignmentContainer")
         }
      }
    }
}